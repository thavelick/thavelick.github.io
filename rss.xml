<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>
<![CDATA[TristanHavelick.com]]>
    </title>
    <description>
<![CDATA[Tristan Havelick's Blog]]>
    </description>
    <link>https://tristanhavelick.com</link>
    <pubDate>Thu, 03 Mar 2022 00:10:39 GMT</pubDate>
    <item>
      <title>
<![CDATA[Slowing down to combat burnout]]>
      </title>
      <description>
<![CDATA[Last week, a co-worker asked me if I had any resources that he could point his employees to that could help dealing with burn-out. I couldn…]]>
      </description>
      <link>https://tristanhavelick.com/burnout/</link>
      <guid isPermaLink="false">https://tristanhavelick.com/burnout/</guid>
      <pubDate>Sun, 06 Dec 2020 00:00:00 GMT</pubDate>
      <content>
        <p>Last week, a co-worker asked me if I had any resources that he could point his employees to that could help dealing with burn-out. I couldn't really think of any, but went through my list of usual strategies including:</p>
        <ul>
          <li>Taking a break for a few days</li>
          <li>Writing down a list of things I've done as I complete them, as opposed to keeping a to-do list</li>
          <li>Re-evaluating my goals and making sure my current actions align with those goals</li>
          <li>Being on the look out for any stress in my personal life that may be affecting my desire to work</li>
          <li>Working on something different. Variety can powerful</li>
          <li>Collaborating through difficult work</li>
        </ul>
        <p>But the list felt flat. I wasn't sure if anything I'd come up with would really be helpful. A few days later, I reread 
        <a href="https://sive.rs/tilt">a story from Derek Sivers</a>about slowing down on a difficult drive and explicitly ignoring those people who it might annoy, thus making the drive much more enjoyable. He reminds us to adjust adjust our environment to what we need even if it's inconvenient to others.</p>
        <p>The story reminded me a burnout combatting strategy I'd used in the past: 
        <strong>Slow down and focus on craftsmanship</strong>. Often burnout comes when you feel stress always be getting something done, always moving on to the next thing that's needed. Instead of getting things done as quickly as possibly, it can help to take the slow route. Zoom in on the little details. Take a lot more time to make what you're working on as perfect as you can. In a software development context, is each variable name as good as it could be? Could any lines of code be removed? Could we make it perform faster? If what you're working on feels repetitive, could you make the computer do the work for you? Could the code be rewritten to be more readable?</p>
        <p>When it works, this strategy helps me find the beauty in my work again. Sometimes I go a bit overboard and end up with an over-engineered mess I have to throw away. But when I do, the quick solution and simple solution I started with ends up feeling much better as now I've seen the flaws in the alternative. And of course, burnout can be caused by the reverse too. Sometimes, if I've been to in the weeds of the details and too focused on making things perfect it can help to step back and come up with a quick and un-elegant solution instead.</p>
        <p>The feeling of burnout is your brain's way of telling you that something needs to change. So, the next time that feeling settles upon you consider that perhaps the solution is as simple as changing the pace and focus of your work.</p>
      </content>
    </item>
    <item>
      <title>
<![CDATA[Thinking of starting a blog? You likely already have]]>
      </title>
      <description>
<![CDATA[My recent return to updating my website and finally getting around to starting a blog on my own site was inspired in large part by Alexey…]]>
      </description>
      <link>https://tristanhavelick.com/already-blogging/</link>
      <guid isPermaLink="false">https://tristanhavelick.com/already-blogging/</guid>
      <pubDate>Tue, 24 Nov 2020 00:00:00 GMT</pubDate>
      <content>
        <p>My recent return to updating my website and finally getting around to starting a blog on my own site was inspired in large part by Alexey Guzey's article on 
        <a href="https://guzey.com/personal/why-have-a-blog/">Why you should start a blog right now</a>. In it, he helped me overcome my biggest objections to starting. First, he convinced me that it doesn't matter if I don't come up with anything original to say:</p>
        <blockquote>
          <p>Consider a university professor teaching a course. Does she say anything original? Do you think she should cancel her course because somebody else discovered the things she wants to teach? Or does she have to cancel her course simply because there is a similar course at some other university?</p>
          <p>Or consider yourself. Do you avoid having conversations with your friends when you think you have nothing original to say? Do you share things with them? Do you give advice? Do you help to understand things?</p>
        </blockquote>
        <p>Second, the article gave me a lot of ideas on where to find something to write about including:</p>
        <ul>
          <li>Scouring old IM logs and emails for things you said that seemed useful to others.</li>
          <li>Looking at comments you've made on other peoples posts.</li>
          <li>Thinking about advice you repeatedly give to friends.</li>
          <li>Look through notes taken when researching different topics.</li>
        </ul>
        <p>This got me thinking about other sources I could use for article ideas and it hit me: I'd already written a lot of article-like content but it was spread scattershot over the web. I then collected a few of these, made some minor edits and they became the first few articles on this site. The oldest of which I adapted from a StackOverflow post I wrote all the way back in 2008! If you're starting a blog, you should look around the web to find things you've already written and consider adding them as back dated posts on the new site.</p>
        <h2>Where to find articles you've already written to add to your blog</h2>
        <p>There are a lot of places you can probably find content you've written that you can adapt to blog articles. Some you can likely import directly into your blog and others you might need to edit and or flesh out a little.</p>
        <ul>
          <li>Posts you've written on third party blogging platforms like Medium, Blogger or BlogSpot.</li>
          <li>Questions you've asked or answered on Q&amp;A websites like Quora, StackOverflow or StackExchange. In these cases you might need to edit them a bit so they make sense in a more narrative form, but doing so is probably quicker and easier than you anticipated.</li>
          <li>Forum posts.</li>
          <li>Entries from your personal journal (it's probably a good idea to heavily edit these and obviously not post everything en masse).</li>
          <li>Articles or documentation you've written for work that might be useful for a wider audience. Check with your boss before adapting any of this work, but chances are they'll approve so long as you aren't revealing anything proprietary or that could be a security risk.</li>
          <li>If you're a programmer, README's from open source tools you've developed.</li>
          <li>Notes you've taken when learning something new.</li>
          <li>Content you've written on old, now defunct websites accessed through the 
          <a href="https://archive.org/web/web.php">Wayback Machine</a>.</li>
          <li>Content that has been removed by changing moderation standards. When I wrote the original post behind my article on getting 
          <a href="/breaking-into-coding">my first software development job</a>on 
          <a href="http://stackoverflow.com">StackOverflow</a>they allowed open ended questions. When the site decided to focus on questions with more definitive answers, my answer was removed by moderators even though many people found it useful. Adding it to my blog makes this long missing advice public again.</li>
          <li>Long posts from Facebook or Twitter threads that others outside your friend circle might find useful.</li>
        </ul>
        <h2>Why you shouldn't worry about duplicating content</h2>
        <p>Collecting all of your writing in your blog can allow people that would otherwise only find one or two fragments of your writing to read all you've had to say if they are so inclined.</p>
        <p>Also, it's a great motivational exercise. It makes writing seem like a less daunting and new task. Once doing it, you'll realize you've actually been writing for years, and now have something to show for it. That should make future writing easier.</p>
        <p>SEO experts sometimes rail against duplicate content. This might make you think I'm crazy for advocating using it. However, generally 
        <a href="https://searchengineland.com/myth-duplicate-content-penalty-259657">duplicate content won't penalize your rankings</a>, it just won't count positively toward your rankings so content from the original site might rank more highly that the one on your new blog. If you're really worried about this you can add a 
        <code>noindex</code>meta tag to the page to make search engines ignore it. That way at least people who come to your blog through other articles can still get value out of it.</p>
        <h2>It doesn't matter that your old writing wasn't that great</h2>
        <p>Think about one of your favorite blogs. One you've read for years perhaps. Go there, and click into the author's archives and read their first few posts. Chances are they will suck compared to what they're posting today. It's natural for writing to improve over time and for your thinking on a topic to change. Make minor (or even major) edits if you feel the need. Write some introductory text that gives context about what was happening when you wrote the article.</p>
        <h2>Don't stop with the old stuff</h2>
        <p>Of course, the idea here is not to just collect a bunch of old personal writing artifacts, but to give your blog (and your brain) a bit of a jump start. Once you've added a few older articles, spend some time to write some new ones. If your thoughts on a topic have changed, write a follow up post. Or write something entirely different.</p>
      </content>
    </item>
    <item>
      <title>
<![CDATA[An Obligatory Yet Useless Introduction]]>
      </title>
      <description>
<![CDATA[I wrote this a couple years back in draft form and never got around to publishing it. I'm a little less enthusiastic about the "IndieWeb…]]>
      </description>
      <link>https://tristanhavelick.com/welcome/</link>
      <guid isPermaLink="false">https://tristanhavelick.com/welcome/</guid>
      <pubDate>Tue, 22 May 2018 00:00:00 GMT</pubDate>
      <content>
        <p>
          <em>[I wrote this a couple years back in draft form and never got around to publishing it. I'm a little less enthusiastic about the "IndieWeb" revolution now, but it does serve introduce the blog reasonably well]</em>
        </p>
        <p>I'm joining the IndieWeb revolution by creating my own personal website again for the first time in years! A lot of the structure comes from the venerable Derek Sivers, Is built with GatsbyJS and is hosted on GitHub Pages. Soon I'll be porting all of my old facebook, twitter and medium posts over here, along with hopefully adding some new content.</p>
      </content>
    </item>
    <item>
      <title>
<![CDATA[Why I haven’t been playing with my new amazing PS4]]>
      </title>
      <description>
<![CDATA[This article has been adapted from a post I wrote at Medium, years ago. It was revised and published here on 2020-11-21 cover image  For…]]>
      </description>
      <link>https://tristanhavelick.com/ps4/</link>
      <guid isPermaLink="false">https://tristanhavelick.com/ps4/</guid>
      <pubDate>Sun, 03 Jan 2016 00:00:00 GMT</pubDate>
      <content>
        <p>
          <em>[This article has been adapted from a post I wrote at Medium, years ago. It was revised and published here on 2020-11-21]</em>
        </p>
        <p>
          <img src="https://cdn-images-1.medium.com/max/2000/1*pYOJ7QeG4cAoI1t9TjPTyA.jpeg" alt="cover image" />
        </p>
        <p>For Christmas 2015 I got a new PlayStation 4, which was pretty damn awesome. It has amazing graphics, and with it came this really sweet open world game, Fallout 4, where you play as a survivor in this post-apocalyptic world that people probably spent years painstakingly creating detail after detail. Its pretty fun and impressive. But I barely played it in the weeks following recieving it.</p>
        <p>Instead, I spent most of my time playing this Free/Open Source game first released 20 years ago (in some form). The game’s graphics (at their best) look like this:</p>
        <p>
          <img src="https://cdn-images-1.medium.com/max/2034/1*vb2J01WJlJWlOcVNZJZZ8A.png" />
        </p>
        <p>It’s called 
        <a href="http://crawl.develz.org/wordpress/">Dungeon Crawl: Stone Soup,</a>and I’ve been a little obsessed. Why? In this game you can actually die. Just now, I played the game for 2 hours, took a misstep and my character died. And that was it. I couldn’t be regenerated. I couldn’t restart from a save point. I couldn’t even play again and be faced with the same maps and enemies again armed with my newly acquired knowledge of what to find where, because the levels in this game are randomly generated each time you play. This very likely sounds awful but it’s not. As far as I can tell, there are two reasons for this being awesome instead of horrible.</p>
        <p>First, this kind of “permadeath” really ratchets up the intensity of the game. When you’re staring down a giant ogre with a spiked club he looks like something my cat could draw on the screen. But when he has the power to wipe out hours of effort in a single turn he becomes incredibly scary in your mind’s eye. And if you’re otherwise doing well you’ll do anything in your power to survive. In my recent game, I felt this kind of thrilling moment over and over again. I stumbled upon a very powerful weapon called a Dark Maul. This thing was several times more powerful than any normal weapon in the game, but had the disadvantage of being extremely slow. I could take out almost any enemy in a single hefty hit of this beast of a hammer, but then I’d be left at the mercy of any other enemies as I worked to lift it over my head to attack again. Despite the disadvantage I was doing well, carefully luring enemies into hallways where I could take them on one by one, acting as a one man Spartain Army in my personal Pass of Thermopylae. If things got to be too much, I could run up stairs, kill off any close enemies that followed and head back down to the waiting horde. If I got into a bind, I could use a scroll of teleportation to wisk myself away to a random location in the dungeon. Of course, this is what ended up doing me in. I teleported away from some enemies while at deaths door into a gauntlet of still more enemies and before I could move I was hit by a fireball from an otherwise weak and typically harmless orcish wizard. The moments leading up to that death were some of the most thrilling I’ve experienced in a game.</p>
        <p>
        <em>My Final Moments</em>: 
        <img src="https://cdn-images-1.medium.com/max/3664/1*6hEdaggcmFDCg0wKjV_Y-g.png" alt="My Final Moments" /></p>
        <p>And this leads me to the second reason I really like this particular game. I could have done better. I could have used an ability called “Berserk” to send my character into an inferno of adrenaline fueled rage that maybe, just maybe would have given me enough speed and energy to get away to a more defensible position. DCSS is just one in a long line of “Roguelikes” games that share it’s randomly generated dungeons and permanent death. The thing for me that sets it apart from other Roguelikes I’ve played is every time I die, I feel like I could have done better. I feel like if I’d just thought about my last move a little bit longer, or used a better strategy to avoid getting in such a tight spot, but I didn’t. My death was my fault, not due to just an unfortunate roll of the dice. Other rogue likes seem to spring surprises on you that with your limited resources are simply too weak to deal with. In classics of the genere like Nethack or the original rogue, people spend sometimes years between wins, waiting for that perfect game to come along.</p>
        <p>DCSS keeps driving me to play again and again. It has a small enough complexity to be easy enough to wrap my mind around, yet a large enough variety to keep me coming back and trying new things. Big polished AAA games have their appeal and I certainly returned to them over the lifetime of the PS4. But then I'd find myself drawn back into the lofi dungeon to see if this time I might survive just a little while longer this time...</p>
      </content>
    </item>
    <item>
      <title>
<![CDATA[Thoughts on consumer goods and christmas 2010]]>
      </title>
      <description>
<![CDATA[This article originally appeared on Blog Spot and was published here on 2020-11-22 In recent months I've come to realization that I can buy…]]>
      </description>
      <link>https://tristanhavelick.com/consumerism/</link>
      <guid isPermaLink="false">https://tristanhavelick.com/consumerism/</guid>
      <pubDate>Wed, 01 Dec 2010 00:00:00 GMT</pubDate>
      <content>
        <p>
          <em>[This article originally appeared on Blog Spot and was published here on 2020-11-22]</em>
        </p>
        <p>In recent months I've come to realization that I can buy pretty much any consumer good I really want. True, I can't go down to cherry creek mall and buy the most expensive watch they have, but I've never had much of a taste for luxury anyhow. I can however, head down to the music store and buy any CD I want. Had I the inclination, I could visit Best Buy and purchase any DVD I wanted. The same can be said about a visit to Tattered Cover, my local bookshop and obtain a copy of anything I desired to read. In any case, I could probably get away with doing these things quite often.</p>
        <p>The preceding paragraph was not written out of a desire to brag. The fact is, with very little determination and the ability to bend (okay break) a little copyright law, or dare I say, visit your local library you too can have similar ability even when living hand to mouth.</p>
        <p>Strange as it may seem, given the ability to own all this media and physical goods, I have recently come to procure less and less of it. In most cases if I want to watch a movie, I'll Tivo it, or watch it on Netflix. If I want to listen to music, more often than not in the pas t few months, I'll visit Pandora. Truth be told, prior to my reunion with Pandora I'd pirated a lot of music, but that activity has greatly slowed recently. Whenever I do want to listen to specific music, I'll acquire it digitally, or at the very least get a CD and immediately rip it to digital format, with the CD itself rarely to be seen again. I also very rarely buy physical books these days. Unless I'm reading something obscure, I almost always read on my Kindle.</p>
        <p>Yet, as I look around my apartment I see shelf after shelf of movies I like, but rarely watch. I see bookshelves filled so much that books are stacked in front of other books. The phenomenon continues as I look to my kitchen, filled with gadgets rarely used, and cookbooks rarely opened.</p>
        <p>Julia (my wife) and I spent a lot of time today clearing things out and getting rid of a lot of junk we've acquired over the years, and although we have a lot to go, it finally feels more than just clean-- Itt has some semblance of being organized. And yet, a sense of foreboding comes over me as the day after christmas approaches.</p>
        <p>Despite my being an atheist, christmas is by far my favorite holiday. I love spending time with family, eating, drinking and talking. I love the spirit of giving and honest camaraderie. I love to see the expressions on everyone's faces when they get something they really wanted. I even really love the feeling I get when I myself open a really creative and unique gift I hadn't even thought of buying myself, or that one thing I was really hoping for.</p>
        <p>That said, I have in some ways come to dread the day after christmas. When I come home, much of the revelry has passed and I have got a brand new batch of stuff to layer atop my existing possessions. Its not that I don't like them, its that I really hate storing them. I live in a small condo and really don't want to "upgrade"my housing just to accommodate more stuff.</p>
        <p>At the same time, I've come to realize of late that I get much more enjoyment out of doing things than having things. I really enjoyed the last couple books I read, but I enjoy discussing such books with people almost more than reading. I enjoy listening to music, but I most enjoy hearing new music a friend recommended, or going to a concert (either classical or rock). Overall, I've found that more happiness comes from gaining memories rather than possessions. I've even seen a lot of research to back up that proposition. On that note, I have the following suggestions to gift givers out there:</p>
        <pre>
<code>* If you're going to give some kind of media give the digital kind, if the recipient is like me and is so inclined.
* Instead of giving someone an art book, offer to visit your favorite museum with them, or buy them a membership.
* Instead of giving someone a DVD, buy them some movie tickets and offer to join them.
* In lieu of a CD, offer to take someone to a concert, play, musical, or symphony.
* Rather than giving a cookbook or gadget, invite your recipient over to cook something with you or clip a few of your own favorite recipes.
</code>
</pre>
        <p>Sure, there are many out there who like getting stuff for christmas. I know when I was younger and had a severe shortage of stuff, I would have been disappointed if my christmas consisted of things from the above list. Also, many times a physical gift really is best. If you are endowed with amazing talent at creating or finding unique gifts, keep it up. A place can always be found for something truly heartfelt or amazing. But if your christmas shopping typically consists of a visit to the mall, best buy, or a web superstore, and you can't figure out what to give to your Wookie friend when he already owns too many combs (see 
        <a href="https://www.youtube.com/watch?v=OSWCQ7ALEms">this video</a>) , give the above list a shot.</p>
      </content>
    </item>
    <item>
      <title>
<![CDATA[How I Got My First Programming Job]]>
      </title>
      <description>
<![CDATA[This article is based on a stack overflow answer that was deleted after the site mvoed away from more open ended questions. I published it…]]>
      </description>
      <link>https://tristanhavelick.com/breaking-into-coding/</link>
      <guid isPermaLink="false">https://tristanhavelick.com/breaking-into-coding/</guid>
      <pubDate>Fri, 05 Dec 2008 00:00:00 GMT</pubDate>
      <content>
        <p>
          <em>[This article is based on a stack overflow answer that was deleted after the site mvoed away from more open ended questions. I published it here on 11/21/2020]</em>
        </p>
        <p>When I was in high school, one of my teachers told us a story of when he was in college. A friend of his wanted a job as a DJ for the university's radio station so he bought a huge rock and roll encyclopedia, and carried it around everywhere he went. A few months later when a position opened, he was offered the DJ job. Everyone saw him with that book, and assumed he was an expert in subject. The thing was, he never actually read a word of the book.</p>
        <p>Now, you won't get a job coding simply by carrying around a PHP and not reading it. However my teacher's story inspired me to continuously learn new technologies and to do so conspicuously, letting everyone know in both subtle and non-subtle ways what you are learning.</p>
        <p>Months after hearing this story, I was a a freshman at University, and I was very anxious to start coding professionally. I'd been coding in Atari Basic, and then (now) old versions of Visual Basic since I was 8 years old, and didn't want to wait until I graduated four years later to start making money with it. I was teaching myself HTML and (Classic) ASP on the side, and really came to like web development.</p>
        <p>I wasn't very confident in my abilities at that point, and I just wanted to get some kind of a job working with computers at a company that had a development department. In that vein, I applied for a job at a local Internet Service Provider who was hiring folks to support their Dial-Up Internet service. I got the job, and I'm fairly certain it was due to the fact that I was carrying around O'reily's TCP/IP Networking book when I went to the interview and this impressed the interviewer.</p>
        <p>After getting my foot in the door, instead of spending my lunch hours eating with people in the support department or alone, I'd walk up to the web development department and bug the folks there. I'd show them what I was working on for little side projects, and they'd show me what they were working on. I would hang out behind them, watching them code (they didn't seem to mind) and soon I was making suggestions when they got stuck. A while later, I'd come up and volunteer to help code things (on my own) in the evenings when they were close to a deadline (for free).</p>
        <p>After a few months of this, they offered me a job in the department, when one of the other developers left.</p>
        <p>So in summary:</p>
        <ol>
          <li>Always be learning new things, and make sure people know you are learning them. Don't just fake it like my teacher's friend.</li>
          <li>Work on your own development projects. This is the most important thing. You need to be able to show people your can actually get stuff done.</li>
          <li>Don't be afraid to get a non-coding job to get your foot in the door.</li>
          <li>If you do (3), spend as much free time as possible working with the people in the company who actually do programming, but make sure you are providing value.</li>
        </ol>
        <p>Of course, this strategy wouldn't work for everyone, and wouldn't work at every company, but it can work.</p>
      </content>
    </item>
  </channel>
</rss>

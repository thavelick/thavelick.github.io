{"version":3,"sources":["webpack:///./src/pages/books.js"],"names":["books","data","allGoodreadsBook","edges","map","node","book","title","authors","name","review","rating","query"],"mappings":"2FAAA,kFAGe,sBAAe,IACtBA,EADqB,EAAXC,KACGC,iBAAiBC,MAEpC,OACE,kBAAC,IAAD,KACE,6BACE,sDACA,4BACGH,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAET,4BACGA,EAAKC,KAAKC,MADb,OACwBF,EAAKC,KAAKE,QAAQ,GAAGC,KAD7C,KACqDJ,EAAKK,OAAOC,OADjE,oBAUL,IAAMC,EAAK","file":"component---src-pages-books-js-9467709514da885d4ae6.js","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/layout\"\nimport { graphql } from \"gatsby\";\nexport default ({ data }) => {\n  const books = data.allGoodreadsBook.edges;\n\n  return (\n    <Layout>\n      <div>\n        <h1>What I've Been Reading</h1>\n        <ul>\n          {books.map(({ node }) => (\n\n            <li>\n              {node.book.title} by {node.book.authors[0].name} [{node.review.rating}/5 stars]\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\nquery RecentBooks {\n    allGoodreadsBook(sort: {fields: review___dateUpdated, order: DESC}, filter: {shelfNames: {eq: \"read\"}, review: {rating: {ne: null}}}, limit: 6) {\n      edges {\n        node {\n          book {\n            title\n            authors {\n              name\n            }\n          }\n          review {\n            dateUpdated\n            rating\n          }\n          shelfNames\n        }\n      }\n    }\n  }\n  \n`;\n"],"sourceRoot":""}